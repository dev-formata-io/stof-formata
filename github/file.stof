//
// Copyright 2024 Formata, Inc. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

import github:formata "task.stof";


/**
 * Formata root scope.
 * Everything for Formata will exist in this scope.
 */
root Formata: {
    /**
     * GitHub interface.
     */
    GitHub: {
        /**
         * Formata Task to parse a GitHub file into your Stof document.
         * Requires your document to have an 'HTTP' library loaded.
         */
        type ParseFile extends Formata.Task {
            owner: str = 'dev-formata-io';
            repo: str = 'stof-formata';
            headers: vec = [('Accept', 'application/vnd.github.raw+json'), ('X-GitHub-Api-Version', '2022-11-28')];
            
            /// This is the Stof location that the file contents will be parsed into when ran
            parse: str = 'self';

            /// This is the file path within the target GitHub repository
            path: str;

            /// This is the format of the requested file (used for Stof parsing)
            format: str = 'stof';

            fn get(): str {
                let url = 'https://api.github.com/repos/' + self.owner + '/' + self.repo + '/contents/' + self.path;
                let response = HTTP.get(url, self.headers, 3s);
                return response[2] as str;
            }

            fn run(reply: obj) {
                self.Task::run(reply);
                let contents = self.get();
                parse(contents, self.format, self.parse);
            }
        }
    }
}
